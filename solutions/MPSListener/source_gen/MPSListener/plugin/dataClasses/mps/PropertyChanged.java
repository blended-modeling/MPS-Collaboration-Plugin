package MPSListener.plugin.dataClasses.mps;

/*Generated by MPS */

import org.jetbrains.mps.openapi.event.SPropertyChangeEvent;

public class PropertyChanged {
  private String nodeName;
  private String rootNodeName;
  private String conceptName;
  private String propertyName;
  private String modelName;

  public PropertyChanged(SPropertyChangeEvent event) {
    // TODO: improve upon initialisation, could have a map<String,String> where an element could be
    // (nodename, xyz) where nodename is in lowcaps. have a switch statement to match. but necessary?
    this.nodeName = event.getNode().getName();
    this.rootNodeName = event.getNode().getContainingRoot().getName();
    this.conceptName = event.getNode().getConcept().getName();
    this.propertyName = event.getProperty().getName();
    this.modelName = event.getModel().getName().getLongName();
  }

  public String getNodeName() {
    return new String(this.nodeName);
  }
  public String getRootNodeName() {
    return new String(this.rootNodeName);
  }
  public String getConceptName() {
    return new String(this.conceptName);
  }
  public String getPropertyName() {
    return new String(this.propertyName);
  }
  public String getModelName() {
    return new String(this.modelName);
  }

  @Override
  public String toString() {
    return "Node: " + this.nodeName + "\nRoot:" + this.rootNodeName + "\nConcept:" + this.conceptName + "\nProperty:" + this.propertyName + "\nModel:" + this.modelName;
  }
}
